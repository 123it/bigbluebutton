<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton - http://www.bigbluebutton.org
  
  Copyright (c) 2008-2009 by respective authors (see below). All rights reserved.
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 3 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, If not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
--> 

<EventMap xmlns="http://mate.asfusion.com/" xmlns:mx="http://www.adobe.com/2006/mxml">

	<!--
	This is the main event map for the application, think of it as the application controller.
	-->
	<EventHandlers type="{FlexEvent.PREINITIALIZE}">
		<!--
		The FlexEvent.PREINITIALIZE event is a good place for creating and initializing managers.
		-->
		<ObjectBuilder generator="{ModulesProxy}" cache="global" />
		<ObjectBuilder generator="{UserService}" cache="global" />
	</EventHandlers>
	
	<EventHandlers type="{PortTestEvent.TEST_RTMP}" >
		<MethodInvoker generator="{ModulesProxy}" method="testRTMP" />
	</EventHandlers>

	<EventHandlers type="{PortTestEvent.PORT_TEST_SUCCESS}" >
		<MethodInvoker generator="{ModulesProxy}" method="portTestSuccess" arguments="{event.protocol}" />
	</EventHandlers>
	
	<EventHandlers type="{PortTestEvent.PORT_TEST_FAILED}" >
		<MethodInvoker generator="{ModulesProxy}" method="testRTMPT" arguments="{event.protocol}" />
	</EventHandlers>
	
	<EventHandlers type="{LogoutEvent.USER_LOGGED_OUT}" >
		<MethodInvoker generator="{UserService}" method="logoutUser" />
	</EventHandlers>
	
	<EventHandlers type="{LogoutEvent.DISCONNECT_TEST}" >
		<MethodInvoker generator="{UserService}" method="disconnectTest" />
	</EventHandlers>
	
	<EventHandlers type="{UserServicesEvent.START_USER_SERVICES}" >
		<MethodInvoker generator="{UserService}" method="startService" arguments="{event}" />
	</EventHandlers>
	
	<EventHandlers type="{UsersConnectionEvent.CONNECTION_SUCCESS}" >
		<MethodInvoker generator="{UserService}" method="userLoggedIn" arguments="{event}" />
	</EventHandlers>
	
	<EventHandlers type="{SuccessfulLoginEvent.USER_LOGGED_IN}" >
		<MethodInvoker generator="{ModulesProxy}" method="loadAllModules" arguments="{event.conferenceParameters}" />
	</EventHandlers>
	
	<EventHandlers type="{ModuleCommand.NEW_COMMAND}" >
		<MethodInvoker generator="{ModulesProxy}" method="moduleCommand" arguments="{event}" />
	</EventHandlers>
	
	<!-- Viewers Stuff -->
	<EventHandlers type="{RaiseHandEvent.RAISE_HAND}" >
		<MethodInvoker generator="{UserService}" method="raiseHand" arguments="{event}" />
	</EventHandlers>
	
	<EventHandlers type="{LowerHandEvent.LOWER_HAND_EVENT}" >
		<MethodInvoker generator="{UserService}" method="lowerHand" arguments="{event}" />
	</EventHandlers>
	
	<EventHandlers type="{BroadcastStartedEvent.BROADCAST_STARTED_EVENT}" >
		<MethodInvoker generator="{UserService}" method="addStream" arguments="{event}" />
	</EventHandlers>
	
	<EventHandlers type="{BroadcastStoppedEvent.BROADCAST_STOPPED}" >
		<MethodInvoker generator="{UserService}" method="removeStream" arguments="{event}" />
	</EventHandlers>
	<!-- End Viewers Stuff -->
	
	<EventHandlers type="{KickUserEvent.KICK_USER}" >
		<MethodInvoker generator="{UserService}" method="kickUser" arguments="{event}" />
	</EventHandlers>
	
	<EventHandlers type="{ConfigEvent.CONFIG_EVENT}" >
		<InlineInvoker method="loadSkins" arguments="{event}" />
	</EventHandlers>

	<mx:Script>
	<![CDATA[
		import mx.events.FlexEvent;
		
		import org.bigbluebutton.main.events.ModuleCommand;
		import org.bigbluebutton.main.events.ConfigEvent;
		import org.bigbluebutton.main.events.LogoutEvent;
		import org.bigbluebutton.main.events.ModuleLoadEvent;
		import org.bigbluebutton.main.events.ParticipantJoinEvent;
		import org.bigbluebutton.main.events.PortTestEvent;
		import org.bigbluebutton.main.events.SuccessfulLoginEvent;
		import org.bigbluebutton.main.events.UserServicesEvent;
		import org.bigbluebutton.main.model.PortTestProxy;
		import org.bigbluebutton.main.model.modules.ModulesProxy;
		import org.bigbluebutton.main.model.users.UserService;
		import org.bigbluebutton.main.model.users.events.BroadcastStartedEvent;
		import org.bigbluebutton.main.model.users.events.BroadcastStoppedEvent;
		import org.bigbluebutton.main.model.users.events.KickUserEvent;
		import org.bigbluebutton.main.model.users.events.LowerHandEvent;
		import org.bigbluebutton.main.model.users.events.RaiseHandEvent;
		import org.bigbluebutton.main.model.users.events.UsersConnectionEvent;
		
		private function loadSkins(e:ConfigEvent):void{
			if (e.config.skinning != "") StyleManager.loadStyleDeclarations(e.config.skinning); 
		}
		
	]]>
	</mx:Script>
	
    <!-- ======================================================================================== -->
    <!-- Services   Note: you can have an external file if you have more services -->
    <!-- _________________________________________________________________________________________ -->
    
    <mx:HTTPService id="configService" url="conf/config.xml" resultFormat="e4x" />
	<mx:HTTPService id="joinService" url="conf/joinResultMock.xml" resultFormat="e4x" />	
</EventMap>
